# Docker-specific configuration
server.port=18060
spring.application.name=twitter-mcp-server

# Database Configuration (H2 for Docker)
spring.datasource.url=jdbc:h2:file:/app/data/twitter-mcp-db
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Logging Configuration
logging.level.root=INFO
logging.level.com.twitter.mcp=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Twitter API Configuration (from environment variables)
twitter.api.key=${TWITTER_API_KEY:}
twitter.api.secret=${TWITTER_API_SECRET:}
twitter.access.token=${TWITTER_ACCESS_TOKEN:}
twitter.access.secret=${TWITTER_ACCESS_SECRET:}

# MCP Server Configuration
mcp.server.endpoint=/mcp
mcp.server.name=twitter-mcp-server
mcp.server.version=1.0.0

# Quota Management Configuration
quota.read.max=100
quota.write.max=500
quota.reset.period=monthly

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
